@model StudentInfoSystem.Database.Students

@{
    StudentInfoSystem.Database.Logins logonAdmin = (StudentInfoSystem.Database.Logins)Session["LogonAdmin"];
}
@{

    ViewBag.Title = $"{Model.StudentName} {Model.StudentSurname}";
}

@if (logonAdmin != null)
{
    <h2 class="col-md-6 col-xs-6" style="font-size:20pt">Edit Profile</h2>
    <hr />
    <h4>@ViewBag.MyError</h4>

    using (Html.BeginForm("ProfileEdit", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        @Html.AntiForgeryToken()

        <div class="form-horizontal col-md-offset-2">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class=" form-group">
                <div class="col-md-2 ">
                    @Html.LabelFor(model => model.StudentName, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control", maxlength = "15", required = "required" } })
                    @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.StudentSurname, "Surname", htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.StudentSurname, new { htmlAttributes = new { @class = "form-control", maxlength = "15", required = "required" } })
                    @Html.ValidationMessageFor(model => model.StudentSurname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.StudentNo, "StudentNo", htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.StudentNo, new { htmlAttributes = new { @class = "form-control", maxlength = "15", required = "required" } })
                    @Html.ValidationMessageFor(model => model.StudentNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.ClassId, "Class", htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.ClassId, (List<SelectListItem>)ViewBag.classList, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-info" />
                </div>
            </div>
        </div>
    }
}
else
{
    <div class="row">
        <div class="col-md-12 text-center" style="margin-top:20px;">
            You can login as an <a href="~/Admin/Login" style="font-weight:bold"> Admin </a> to update the information!
        </div>
    </div>
}



@if (TempData["resultInfo"] != null && TempData["resultInfo"] != " ")
{

    @Html.Partial("InfoModal");

    <script>$('#exampleModalCenter').modal('show');</script>

}

